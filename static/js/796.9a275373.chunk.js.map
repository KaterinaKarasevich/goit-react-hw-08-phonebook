{"version":3,"file":"static/js/796.9a275373.chunk.js","mappings":"iOAEMA,EAAOC,EAAAA,EAAAA,KAAH,uJASJC,EAAYD,EAAAA,EAAAA,IAAH,iDAITE,EAAWF,EAAAA,EAAAA,MAAH,uIASRG,EAAYH,EAAAA,EAAAA,KAAH,kJAQTI,EAAYJ,EAAAA,EAAAA,MAAH,gVAkBTK,EAASL,EAAAA,EAAAA,OAAH,6b,mBC1CCM,EAAmB,WAC9B,IAAMC,GAAWC,EAAAA,EAAAA,MAwCjB,OACM,UAACT,EAAD,CAAMU,SAvCS,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EA4BmCC,aAAa,KAA3C,WAEE,UAACpB,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,yBACI,SAACC,EAAD,CACEkB,KAAK,OACLP,KAAK,OACLQ,YAAY,kBASpB,UAACrB,EAAD,YACE,SAACC,EAAD,6BACI,SAACC,EAAD,CACEkB,KAAK,QACLP,KAAK,QACLQ,YAAY,cAMpB,UAACrB,EAAD,YACE,SAACC,EAAD,wBACE,SAACC,EAAD,CACGkB,KAAK,WACLP,KAAK,WACLQ,YAAY,oBAOrB,SAAClB,EAAD,CAAQiB,KAAK,SAAb,uBAIL,EClFL,EATsB,WAClB,OACI,4BACI,qCACA,SAAChB,EAAD,MAGX,C","sources":["components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  border: 1px solid black;\n  padding: 30px;\n  margin: 20px;\n\n`\nconst FormGroup = styled.div`\n   margin-bottom: 30px;\n`\n\nconst FormWrap = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  &:last-child {\n  margin-bottom: 0;\n}\n`\n\nconst FormLabel = styled.span`\n  text-align: left;\n  margin-bottom: 4px;\n  font-size: 18px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.01em;\n`\n\nconst FormInput = styled.input`\n\n  border: 1px solid grey;\n  border-radius: 4px;\n  padding: 5px;\n  padding-left: 15px;\n  outline: transparent;\n\n  font-size: 16px;\n  line-height: calc(20 / 16);\n  color: black;\n  transition: border-color 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:focus,\n    &:hover {\n    border-color: blue;\n   }\n`\n\nconst Button = styled.button`\n  width: 150px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(30 / 16);\n\n  padding: 5px;\n  letter-spacing: 0.06em;\n  color: white;\n  background-color: #013220;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  transition: background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  &:hover,\n  &:focus {\n  background-color: #286e1c;\n  }\n`\n\nexport { Form, FormGroup, FormWrap, FormLabel, FormInput, Button}","import { useDispatch } from \"react-redux\";\n\nimport { Form, FormGroup, FormWrap, FormLabel, FormInput, Button } from \"components/RegistrationForm/RegistrationForm.styled\"\nimport { register } from \"redux/auth/operationAuth\";\n// import { getSignInInfo } from \"redux/auth/operationAuth\";\n// import { toast } from \"react-hot-toast\";\n\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n// export const RegistrationForm = () => {\n//   const [name, setName] = useState(\"\")\n//   const [email, setEmail] = useState(\"\")\n//   const [password, setPassword] = useState(\"\")\n//     const dispatch = useDispatch();\n  \n//     const handleSubmit = async(e) => {\n//      e.preventDefault();\n//       const form = e.target;\n    \n      \n//      const infoUser = {\n//            name: form.elements.name.value,\n//            email: form.elements.email.value,\n//            password: form.elements.password.value,\n//     }\n//       dispatch(getSignInInfo(infoUser));\n   \n//      form.reset();\n//    };\n//    const handleChange =  ({target:{name, value}}) => {\n//      if (name === \"name\") setName(value)\n//      else if (name === \"email\") setEmail(value)\n//      else if (name === \"password\") setPassword(value)\n//    }\n    \n  return (     \n        <Form onSubmit={handleSubmit} autoComplete=\"on\">\n        \n          <FormGroup>\n            <FormWrap>\n              <FormLabel>User name</FormLabel>\n                  <FormInput\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"User name\"\n                    // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    // required\n                    // onChange={handleChange}\n                    // value={name}\n              \n                    />      \n            </FormWrap>\n            <FormWrap>\n              <FormLabel>Email address</FormLabel>\n                  <FormInput\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    // onChange={handleChange}\n                    // value={email}\n                   />        \n            </FormWrap>\n            \n            <FormWrap>\n              <FormLabel>Password</FormLabel>\n                <FormInput\n                   type=\"password\"\n                   name=\"password\"\n                   placeholder=\"Password\"\n                  //  onChange={handleChange}\n                  //  value={password}\n                 />\n              \n            </FormWrap>\n          </FormGroup>\n          <Button type=\"submit\">Sign Up</Button>\n        </Form>\n \n        )\n    }\n\n\n\n\n\n\n\n\n\n\n\n","import { RegistrationForm } from \"components/RegistrationForm/RegistrationForm\"\n\n\n const RegisterPage = () => {\n    return (\n        <div>\n            <h2>Sign Up</h2>\n            <RegistrationForm/>\n        </div>\n    )\n}\n\nexport default RegisterPage;    "],"names":["Form","styled","FormGroup","FormWrap","FormLabel","FormInput","Button","RegistrationForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","type","placeholder"],"sourceRoot":""}