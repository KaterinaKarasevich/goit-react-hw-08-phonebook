{"version":3,"file":"static/js/791.aa4f0ef9.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/CotactsPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\nexport const getisLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter.value;\n\n","import styled from '@emotion/styled'\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  border: 1px solid black;\n  padding: 30px;\n  margin: 20px;\n\n`\nconst FormGroup = styled.div`\n   margin-bottom: 30px;\n`\n\nconst FormWrap = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  &:last-child {\n  margin-bottom: 0;\n}\n`\n\nconst FormLabel = styled.span`\n  text-align: left;\n  margin-bottom: 4px;\n  font-size: 18px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.01em;\n`\n\nconst FormInput = styled.input`\n\n  border: 1px solid grey;\n  border-radius: 4px;\n  padding: 5px;\n  padding-left: 15px;\n  outline: transparent;\n\n  font-size: 16px;\n  line-height: calc(20 / 16);\n  color: black;\n  transition: border-color 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:focus,\n    &:hover {\n    border-color: blue;\n   }\n`\n\nconst Button = styled.button`\n  width: 150px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(30 / 16);\n\n  padding: 5px;\n  letter-spacing: 0.06em;\n  color: white;\n  background-color: #013220;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  transition: background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  &:hover,\n  &:focus {\n  background-color: #286e1c;\n  }\n`\n\nexport { Form, FormGroup, FormWrap, FormLabel, FormInput, Button}","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactsAPI } from 'redux/contacts/operations';\n\nimport { getContacts } from 'redux/contacts/selectors';\n\nimport { Form, FormGroup, FormWrap, FormLabel, FormInput, Button } from \"./ContactForm.styled\"\n\n export const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n   \n    const handleSubmit = (e) => {\n     e.preventDefault();\n     const form = e.target;\n     const userName = e.target.elements.name.value;\n     const getExistingName = (contacts, userName) => {\n        return contacts.find(contact => contact.name === userName)\n     };\n     const existingName = getExistingName(contacts, userName);\n     const contact = {\n         \n            name: form.elements.name.value,\n            number: form.elements.number.value,\n    }\n      existingName ?  \n      alert(`${userName} is already in contacts`) : dispatch(addContactsAPI(contact));\n     \n     \n     form.reset();\n   };\n    \n  return (     \n        <Form onSubmit={handleSubmit}>\n        \n          <FormGroup>\n            <FormWrap>\n              <FormLabel>Name</FormLabel>\n\n                  <FormInput\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n               />\n                \n            </FormWrap>\n            \n            <FormWrap>\n              <FormLabel>Number</FormLabel>\n                <FormInput\n                    type=\"tel\"\n                    name=\"number\"\n                    placeholder=\"Number\"\n                                    \n                 />\n              \n            </FormWrap>\n          </FormGroup>\n          <Button type=\"submit\">Add contact</Button>\n        </Form>\n \n        )\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import styled from '@emotion/styled'\nconst ContactItems = styled.ul`\n\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 50px;\n  margin-left: -30px;\n  font-weight: 500;\n  font-size: 18px;\n  \n`\nconst ContactItem = styled.li`\n  gap: 10px;\n  padding: 20px;\n  `\nconst ContactButton = styled.button`\n  width: 100px;\n  font-weight: 500;\n  font-size: 14px;\n\n  margin-left: 10px;\n  padding: 5px;\n  letter-spacing: 0.06em;\n  color: white;\n  background-color: gray;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  transition: background-color 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  &:hover,\n  &:focus {\n  background-color: blue;\n}\n`\n\nexport { ContactItems, ContactItem, ContactButton } \n","\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { deleteContactAPI } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\n\nimport { ContactItems, ContactItem, ContactButton } from \"./ContactList.styled\"\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter);\n\n  const fixedFilter = filterValue.toLowerCase();\n  const filteredContacts = contacts\n    ? contacts.filter(contact =>\n      contact.name.toLowerCase().includes(fixedFilter))\n    : null;\n  const dispatch = useDispatch();\n\n  return (\n     \n      <ContactItems>\n        { filteredContacts && filteredContacts.map(contact => {\n          return (\n            <ContactItem key={contact.id}>\n              {contact.name + \": \" + contact.number}\n              {<ContactButton\n                type=\"button\"\n                onClick={() => dispatch(deleteContactAPI(contact.id))}>\n                Delete\n              </ContactButton>}\n            </ContactItem>\n          )\n        })}\n           \n      </ContactItems>\n    )\n  };\n   \n","import styled from '@emotion/styled'\n\nconst TitleFilter = styled.h4`\n    margin-left: 25px;\n`\n\nconst FilterInput = styled.input`\n\n  border: 1px solid grey;\n  border-radius: 4px;\n  padding: 5px;\n  padding-left: 15px;\n  outline: transparent;\n  margin-left: 25px;\n  font-size: 16px;\n  line-height: calc(20 / 16);\n  color: black;\n  transition: border-color 1000ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:focus,\n    &:hover {\n    border-color: blue;\n   }\n`\nexport {FilterInput, TitleFilter}","\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from \"redux/contacts/filterSlice\";\n\nimport { FilterInput, TitleFilter } from \"./Filter.styled\";\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n    \n  const onChangeInputFilter =(evt) => { \n    return dispatch(setFilter(evt.currentTarget.value))\n  };\n\n    return (  \n        <div>\n            <TitleFilter> Find contacts by name</TitleFilter>\n                <FilterInput\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    onChange={onChangeInputFilter}\n                  \n                    />        \n        </div>\n        )\n     }\n\n","import styled from '@emotion/styled'\n\nconst Title = styled.h2`\n      margin-left: 25px; \n\n`\n\nconst TitleContacts = styled.h2`\n    margin-top: 50px;\n    margin-left: 35px;\n`\n\n\nexport { Title, TitleContacts}\n\n\n","\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getError, getisLoading } from \"redux/contacts/selectors\";\n\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\"\nimport { Filter} from \"components/Filter/Filter\"\nimport {Title, TitleContacts} from \"pages/ContactsPage/ContactsPage.styled\"\nimport { useEffect } from \"react\";\nimport { getContactsAPI } from \"redux/contacts/operations\";\nimport Loader from \"components/Loader\";\n\n\n  const ContactsPage = () => {\n  \n  const isLoading = useSelector(getisLoading)\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsAPI());\n  }, [dispatch]);\n\n   return (\n      <>\n        <Title>Phonebook</Title>\n        <ContactForm />\n       \n        {isLoading && !error && <Loader />}\n        {error && !isLoading && (<p>Something went wrong</p>)}\n     \n        <TitleContacts>Contacts</TitleContacts>\n        <Filter />\n          \n        <ContactList />\n         \n      </>\n    );\n}\nexport default ContactsPage;    \n\n\n "],"names":["getContacts","state","contacts","getisLoading","isLoading","getError","error","getFilter","filter","value","Form","styled","FormGroup","FormWrap","FormLabel","FormInput","Button","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","target","userName","elements","name","existingName","find","contact","getExistingName","number","alert","addContactsAPI","reset","type","placeholder","ContactItems","ContactItem","ContactButton","ContactList","fixedFilter","toLowerCase","filteredContacts","includes","map","onClick","deleteContactAPI","id","TitleFilter","FilterInput","Filter","pattern","title","required","onChange","evt","setFilter","currentTarget","Title","TitleContacts","useEffect","getContactsAPI","Loader"],"sourceRoot":""}